<script>
    $(document).ready(function () {
        // Your code here


        $.validator.addMethod(
                "isNumber",
                function (value, element) {
                    return this.optional(element) || (!isNaN(Number(value)) && /\S/.test(value));
                },
                "Please enter a valid zip code"
            );
            $.validator.addMethod(
                "noSpecialChars",
                function (value, element) {
                    return this.optional(element) || /^(?!\s)[a-zA-Z ]+$/.test(value);
                },
                "Special characters and spaces are not allowed"
            );
            $.validator.addMethod(
                "email",
                function (value, element) {
                    return (
                        this.optional(element) ||
                        /^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/.test(
                            value
                        )
                    );
                },
                "Special characters and spaces are not allowed"
            );

            $.validator.addMethod(
                "phoneIN",
                function (phone_number, element) {
                    return this.optional(element) || phone_number.match(/^(\+91[\-\s]?)?[6-9]\d{2}[\-\s]?\d{3}[\-\s]?\d{4}$/);
                },
                "Please enter a valid phone number"
            );

            $("#profile-form").validate({
                rules: {
                    // define validation rules for each field
                    name: {
                        required: true,
                        minlength: 3,
                        noSpecialChars: true,
                    },
                    mobile: {
                        required: true,
                        minlength: 10,
                        phoneIN: true,
                    },
                    addressDetails: {
                        required: true,
                        noSpecialChars: true,
                    },
                    city: {
                        required: true,
                        noSpecialChars: true,
                    },
                    state: {
                        required: true,
                        noSpecialChars: true,
                    },
                    zip: {
                        required: true,
                        isNumber:true,
                        
                    },
                

                },
                messages: {
                    // define error messages for each validation rule
                    name: {
                        required: "Please enter your full name",
                        minlength: "Your name must be at least 3 characters long",
                        noSpecialChars: "Special characters are not allowed",
                    },
                    mobile: {
                        required: "Please enter your phone number",
                        minlength: "Your Phone number should be 10 digit",
                    },
                    addressDetails: {
                        required: "Please enter your address details",
                    },
                    city: {
                        required: "Please enter your city",
                    },
                    state: {
                        required: "Please enter your state",
                    },
                    zip: {
                        required: "enter zip code",
                    },
                     

                },
                // handle validation errors
                highlight: function (element) {
                    $(element).closest(".form-control").addClass("is-invalid");
                },
                unhighlight: function (element) {
                    $(element).closest(".form-control").removeClass("is-invalid");
                },
                errorElement: "div",
                errorClass: "invalid-feedback",
                errorPlacement: function (error, element) {
                    if (element.parent(".input-group").length) {
                        error.insertAfter(element.parent());
                    } else {
                        error.insertAfter(element);
                    }
                },
            // handle form submission on valid input
            submitHandler: function (form) {
                // submit form data through AJAX
                $.ajax({
                    url: '/address',
                    method: 'PATCH',
                    data: $('#profile-form').serialize(),
                    success: (currentAddress) => {
                        $("#profile-form").trigger("reset");
                        console.log(currentAddress, 'first value')
                        let l = currentAddress.address.length
                        console.log(l, 'length')
                        const value = currentAddress.address[l - 1];
                        const card = `
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Address</h5>
                        </div> 
                        <div class="card-body">
                            
                                <div class="row">
                                    <div class="col-md-8">
                                         <div class="tab-content">
                                                <div class="tab-pane active" id="tab_default_1">
                                                        <span class="text-right"> ${value.typeOfAddress}</span>
                                                                <address>
                                                                    <div>${value.name} </div>
                                                                    <div>${value.mobile}</div>
                                                                    <div>${value.addressDetails}</div>
                                                                    <div>${value.city}</div>
                                                                    <div> ${value.state}</div>
                                                                    <div> ${value.zip}</div>
                                                                </address>
                                                </div>
                                          </div>
                                    </div>
                                </div>
                                  <button type="button" class="btn btn-primary">Edit</button>
                                  <button type="button" class="btn btn-danger" data-bs-toggle="modal" id="deleteButton" data-bs-target="#deleteModal${value._id}">
                                                Delete
                                            </button>
                                            <div class="modal fade" style="margin-top: 25vh;" tabindex="-1" role="dialog"
                                                id="deleteModal${value._id}">
                                                <div class="modal-dialog" role="document">
                                                    <div class="modal-content">
                                                        <div class="modal-header">
                                                            <div class="modal-title">
                                                                You are about to remove an address record.
                                                            </div>
                                                            <button type="button" class="btn-close"
                                                                data-bs-dismiss="modal" aria-label="Close"></button>
                                                        </div>
                                                        <div class="modal-body">
                                                            <p>
                                                                This will remove the
                                                                <b class="fw-bold">

                                                                    ${value.typeOfAddress} Address
                                                                </b><br />
                                                                Are you sure?
                                                            </p>
                                                        </div>

                                                        <div class="modal-footer">
                                                            <button type="button" class="btn btn-secondary"
                                                                data-bs-dismiss="modal">
                                                                Close
                                                            </button>
                                                            <form action="/address/${value._id}?_method=DELETE"
                                                                method="post" class="position-relative">
                                                                <button type="submit" class="btn btn-primary">
                                                                    Yes, Remove Address
                                                                </button>
                                                            </form>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                         </div>

                     </div>`;
                        $('#ds').append(card);
                    },
                });
            },
        });
    });
</script>


$("#profile-form").submit((e) => {
e.preventDefault()
$.ajax({
url: '/address',
method: 'PATCH',
data: $('#profile-form').serialize(),
success: (currentAddress) => {

}

})
})